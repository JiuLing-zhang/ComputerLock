<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>透明锁屏</value>
  </data>
  <data name="ChkIsAutostart" xml:space="preserve">
    <value>开机时自动启动（对所有用户）</value>
  </data>
  <data name="ChkIsHideWindowWhenLaunch" xml:space="preserve">
    <value>启动后最小化到托盘</value>
  </data>
  <data name="ChkIsHideWindowWhenClose" xml:space="preserve">
    <value>关闭窗口时最小化到托盘</value>
  </data>
  <data name="ChkIsDisableWindowsLock" xml:space="preserve">
    <value>禁用Windows锁屏</value>
  </data>
  <data name="LblCheckUpdate" xml:space="preserve">
    <value>检查更新</value>
  </data>
  <data name="ChkIsAutoCheckUpdate" xml:space="preserve">
    <value>自动更新</value>
  </data>
  <data name="LblPwdLocation" xml:space="preserve">
    <value>密码框位置</value>
  </data>
  <data name="ChkIsHidePasswordWindow" xml:space="preserve">
    <value>自动隐藏密码框</value>
  </data>
  <data name="LblLockShortcutKey" xml:space="preserve">
    <value>锁屏快捷键</value>
  </data>
  <data name="BtnClearShortcutKeyForLock" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="LblPasswordTip" xml:space="preserve">
    <value>初始密码为1</value>
  </data>
  <data name="BtnPassword" xml:space="preserve">
    <value>设置密码</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>居中</value>
  </data>
  <data name="LeftTop" xml:space="preserve">
    <value>左上</value>
  </data>
  <data name="RightTop" xml:space="preserve">
    <value>右上</value>
  </data>
  <data name="LeftBottom" xml:space="preserve">
    <value>左下</value>
  </data>
  <data name="RightBottom" xml:space="preserve">
    <value>右下</value>
  </data>
  <data name="ProgramRun" xml:space="preserve">
    <value>程序已经运行</value>
  </data>
  <data name="ConfigFilePathError" xml:space="preserve">
    <value>配置文件路径异常</value>
  </data>
  <data name="ShortcutKeyConfigError" xml:space="preserve">
    <value>快捷键配置异常</value>
  </data>
  <data name="ExRegistFailed" xml:space="preserve">
    <value>锁屏快捷键注册失败:</value>
  </data>
  <data name="SaveOk" xml:space="preserve">
    <value>设置成功</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>未设置</value>
  </data>
  <data name="ToolBtnMainWindow" xml:space="preserve">
    <value>显示主窗口</value>
  </data>
  <data name="ToolBtnDoLock" xml:space="preserve">
    <value>屏幕锁定</value>
  </data>
  <data name="ToolBtnExit" xml:space="preserve">
    <value>退出</value>
  </data>
</root>