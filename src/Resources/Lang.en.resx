<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigFilePathError" xml:space="preserve">
    <value>Config file path exception</value>
  </data>
  <data name="HideWindowWhenLaunch" xml:space="preserve">
    <value>Minimize to pallet after startup</value>
  </data>
  <data name="HideWindowWhenClose" xml:space="preserve">
    <value>Minimize to tray after closing</value>
  </data>
  <data name="AutoCheckUpdate" xml:space="preserve">
    <value>Automatic update</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
    <value>Check now</value>
  </data>
  <data name="Autostart" xml:space="preserve">
    <value>Starts automatically on startup</value>
  </data>
  <data name="DisableWindowsLock" xml:space="preserve">
    <value>Disable Windows Lock Screen</value>
  </data>
  <data name="HidePasswordWindow" xml:space="preserve">
    <value>Auto-hide password box</value>
  </data>
  <data name="KeyboardDownActivePwd" xml:space="preserve">
    <value>Show password box when ESC key down</value>
  </data>
  <data name="MouseDownActivePwd" xml:space="preserve">
    <value>Show password box when clicked on position of box</value>
  </data>
  <data name="ActiveMethodEmpty" xml:space="preserve">
    <value>Please select at least one activation method</value>
  </data>
  <data name="PwdLocation" xml:space="preserve">
    <value>pwd box position</value>
  </data>
  <data name="TopLeft" xml:space="preserve">
    <value>TopLeft</value>
  </data>
  <data name="TopRight" xml:space="preserve">
    <value>TopRight</value>
  </data>
  <data name="BottomLeft" xml:space="preserve">
    <value>BottomLeft</value>
  </data>
  <data name="BottomRight" xml:space="preserve">
    <value>BottomRight</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Restarting" xml:space="preserve">
    <value>The setting is successful and will take effect after restarting.</value>
  </data>
  <data name="LockShortcutKey" xml:space="preserve">
    <value>Lock shortcut key</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="ShortcutKeyConfigError" xml:space="preserve">
    <value>Abnormal shortcut key configuration</value>
  </data>
  <data name="ExRegistFailed" xml:space="preserve">
    <value>Lock screen shortcut key registration failed:</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="EnterShortcutKey" xml:space="preserve">
    <value>Please enter shortcut key</value>
  </data>
  <data name="PasswordTip" xml:space="preserve">
    <value>Default password is 1</value>
  </data>
  <data name="SetPassword" xml:space="preserve">
    <value>Set password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>MsgWrongPassword</value>
  </data>
  <data name="PasswordInconsistent" xml:space="preserve">
    <value>The new password is inconsistent with the confirmed password</value>
  </data>
  <data name="PasswordEmpty" xml:space="preserve">
    <value>password can not be empty</value>
  </data>
  <data name="SaveOk" xml:space="preserve">
    <value>Successfully modified</value>
  </data>
  <data name="ShowMainWindow" xml:space="preserve">
    <value>Main Window</value>
  </data>
  <data name="DoLock" xml:space="preserve">
    <value>Screen Lock</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Transparent Lock Screen</value>
  </data>
  <data name="TimerPrefix" xml:space="preserve">
    <value>Hide after </value>
  </data>
  <data name="TimerPostfix" xml:space="preserve">
    <value> second</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="AutoLock" xml:space="preserve">
    <value>Automatically lock after idle time</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>Never</value>
  </data>
  <data name="Minute1" xml:space="preserve">
    <value>1 minute</value>
  </data>
  <data name="Minute2" xml:space="preserve">
    <value>2 minute</value>
  </data>
  <data name="Minute3" xml:space="preserve">
    <value>3 minute</value>
  </data>
  <data name="Minute5" xml:space="preserve">
    <value>5 minute</value>
  </data>
  <data name="Minute10" xml:space="preserve">
    <value>10 minute</value>
  </data>
  <data name="LockAnimation" xml:space="preserve">
    <value>Show animation when locked</value>
  </data>
  <data name="EnablePasswordBox" xml:space="preserve">
    <value>Enable password box</value>
  </data>
  <data name="UnLocked" xml:space="preserve">
    <value>unLocked</value>
  </data>
  <data name="EnablePasswordBoxTips" xml:space="preserve">
    <value>Press ESC and enter password to unlock</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="LogFiles" xml:space="preserve">
    <value>Log Files</value>
  </data>
  <data name="OpenLogs" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="RemoveLogs" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="RemoveLogsConfirm" xml:space="preserve">
    <value>Are you sure you want to delete all logs?</value>
  </data>
  <data name="RemoveLogsOk" xml:space="preserve">
    <value>Log deleted</value>
  </data>
  <data name="ResetSettings" xml:space="preserve">
    <value>Reset Settings</value>
  </data>
  <data name="ResetSettingsMessage" xml:space="preserve">
    <value>Are you sure you want to reset all settings?</value>
  </data>
  <data name="LockOnStartup" xml:space="preserve">
    <value>Lock screen on startup</value>
  </data>
</root>